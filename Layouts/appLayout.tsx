import Head from "next/head";
import { motion } from "framer-motion";
import { useToggle } from "~/hooks";
import {
	IconHelpSquare,
	IconHome2,
	IconLayoutBottombar,
	IconLayoutBottombarExpand,
	IconPhoto,
	IconTable,
	TablerIconsProps,
} from "@tabler/icons-react";
import Link from "next/link";

interface AppLayoutProps {
	children: React.ReactNode;
}

const navWrapVariants = {
	open: {
		scaleY: 1,
		transition: {
			when: "beforeChildren",
			staggerChildren: 0.1,
		},
	},
	closed: {
		scaleY: 0,
		transition: {
			when: "afterChildren",
			staggerChildren: 0.1,
		},
	},
};

const navItemVariants = {
	open: {
		opacity: 1,
		y: 0,
		transition: {
			when: "beforeChildren",
		},
	},
	closed: {
		opacity: 0,
		y: -7,
		transition: {
			when: "afterChildren",
		},
	},
};

export function AppLayout({ children }: AppLayoutProps): JSX.Element {
	const [isOpen, toggleIsOpen] = useToggle(false);
	return (
		<>
			<Head>
				<title>CleFJIB</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/logo.png" />
			</Head>
			<main className="h-screen w-screen scrollbar-none bg-dark text-white overflow-y-scroll relative">
				{children}

				<motion.div
					className="fixed bottom-8 right-12"
					animate={isOpen ? "open" : "closed"}
				>
					<motion.button
						className="text-purple-400 p-2 bg-gray-600 w-fit rounded-lg "
						onClick={toggleIsOpen}
						whileHover={{ scale: 1.1 }}
						whileTap={{ scale: 0.9 }}
					>
						{isOpen ? (
							<IconLayoutBottombarExpand className="text-current" size={36} />
						) : (
							<IconLayoutBottombar className="text-current" size={36} />
						)}
					</motion.button>

					<motion.ul
						className="absolute top-0 w-fit bg-light bg-opacity-20 backdrop-blur-[8px] p-2 rounded-lg whitespace-nowrap"
						initial={navWrapVariants.closed}
						variants={navWrapVariants}
						style={{
							originY: "bottom",
							translateX: "-50%",
							translateY: "-110%",
						}}
					>
						<NavItem text="Home" uri="/" icon={IconHome2} />
						<NavItem text="Guide" uri="/guide" icon={IconHelpSquare} />
						<NavItem text="Gallery" uri="/gallery" icon={IconPhoto} />
						<NavItem text="About me" uri="/me" icon={IconTable} />
					</motion.ul>
				</motion.div>
			</main>
		</>
	);
}

interface NavItemProps {
	text: string;
	uri: string;
	icon?: (props: TablerIconsProps) => JSX.Element;
}

function NavItem({ text, icon: Icon, uri }: NavItemProps): JSX.Element {
	return (
		<motion.li
			className="md:hover:bg-purpureus/40 p-2 rounded-md flex justify-start text-base items-center gap-2 "
			variants={navItemVariants}
		>
			<motion.span>{Icon && <Icon />}</motion.span>
			<Link href={uri}>{text}</Link>
		</motion.li>
	);
}
