import Head from "next/head";
import axios, { AxiosError } from "axios";
import { useSession } from "~/hooks";
import { AppLayout } from "./appLayout";
import { useRouter } from "next/router";
import { useQuery } from "@tanstack/react-query";
import { format, parseISO } from "date-fns";
import Image from "next/image";
import { classNames } from "~/utils/classNames";

interface DashBoardLayoutProps {
	children: React.ReactNode;
}

export function DashBoardLayout({
	children,
}: DashBoardLayoutProps): JSX.Element {
	const router = useRouter();
	const { data: session, ...sessionRest } = useSession();
	const { data: user, ...userRest } = useQuery(
		["user"],
		async function (): Promise<Omit<User, "password">> {
			return axios
				.get<Omit<User, "password">>("/api/users", {
					withCredentials: true,
				})
				.then((res) => res.data);
		},
		{
			staleTime: 1000 * 60 * 10,
		}
	); //

	if (!session && !sessionRest.isLoading)
		router.replace("/auth/login", "/auth/login");

	if (sessionRest.isLoading && !session) return <div>Loading</div>;

	return (
		<AppLayout>
			<Head>
				<title>Project-Memory DashBoard</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
				<link rel="icon" href="/logo.png" />
			</Head>
			<div className="w-full h-full flex">
				{user && (
					<aside className="h-full min-w-fit bg-[#242323] px-4 py-14 text-center">
						<section
							role="contentinfo"
							className="flex flex-col w-full h-fit py-2 justify-center items-center gap-1.5"
						>
							<Image
								src={
									user?.image
										? user.image
										: "https://res.cloudinary.com/dqmh0oemg/image/upload/v1684520230/project-memory/Default_pfp.svg_lhnh7x.png"
								}
								width={100}
								height={100}
								alt="user image"
							/>
							<div className="flex flex-col gap-0.5 items-start">
								<div>
									{user?.firstName} - {user?.lastName}
								</div>
								<div>{user?.email}</div>
								<div>
									Member since:{" "}
									{format(parseISO(user?.createdAt as string), "dd-MMMM-yyy")}
								</div>
							</div>
						</section>
					</aside>
				)}
				{children}
			</div>
		</AppLayout>
	);
}

